---
title: Implicit Item KNN on ML25M
echo: false
deps:
- sweeps/random/IKNN-Implicit
---

```{python}
import json
from pathlib import Path
import pandas as pd
import numpy as np
import plotnine as pn
import matplotlib.pyplot as plt
```

```{python}
from codex.display import DEFAULTS
```

```{python}
sweep_dir = Path('sweeps/random')
sweep_name = 'IKNN-Implicit'

with open(sweep_dir / sweep_name / 'runs.json', 'rt') as jsf:
    run_data = [json.loads(line) for line in jsf]
runs = pd.json_normalize(run_data)
```

## Parameter Sweeps

For the per-user random crossfolding data split, we use the first partition of
the fold for parameter tuning.


```{python}
cfg_topn = runs.groupby(['params.nnbrs', 'params.min_nbrs'])[['metrics.RBP', 'metrics.NDCG', 'metrics.RecipRank']].mean().reset_index()
cfg_topn = cfg_topn.astype({'params.min_nbrs': 'str'})
(
    pn.ggplot(cfg_topn)
    + pn.aes(x='params.nnbrs', y='metrics.RBP', color='params.min_nbrs', shape='params.min_nbrs')
    + pn.geom_line()
    + pn.ylab('Mean RBP')
    + pn.scale_color_brewer('qual', 'Dark2')
)
```

```{python}
(
    pn.ggplot(cfg_topn)
    + pn.aes(x='params.nnbrs', y='metrics.NDCG', color='params.min_nbrs', shape='params.min_nbrs')
    + pn.geom_line()
    + pn.ylab('Mean NDCG')
    + pn.scale_color_brewer('qual', 'Dark2')
)
```

```{python}
(
    pn.ggplot(cfg_topn)
    + pn.aes(x='params.nnbrs', y='metrics.RecipRank', color='params.min_nbrs', shape='params.min_nbrs')
    + pn.geom_line()
    + pn.ylab('Mean RecipRank')
)
```
