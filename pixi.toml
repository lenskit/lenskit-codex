[project]
name = "lenskit-codex"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

# core dependencies to work with the data and website
[dependencies]
python = "~=3.12.0"

click = "~=8.0"
just = "*"
pyprojroot = ">=0.3.0,<0.4"

pydantic = ">=2.8,<3"
humanize = "~=4.0"
deepmerge = ">=2.0,<3"
tabulate = ">=0.9"
requests = ">=2.32.3,<3"

statsmodels = "~=0.14.4"
distfit = "~=1.8"
plotnine = "~=0.14.0"
matplotlib-base = "~=3.6"
seaborn-base = "~=0.13.2"
notebook = ">=7"
jupyter-cache = "*"

dvc = "~=3.50"
dvc-webdav = "*"
dvc-s3 = "*"
dvc-azure = "*"

quarto = "~=1.6"
# pandoc = "==3.2.0"
tectonic = ">=0.15.0,<0.16"

[pypi-dependencies]
lenskit-codex = { path = ".", editable = true }

# exclude MKL for smaller environments in some cases
[feature.nomkl.dependencies]
nomkl = "*"

# dependencies to analyze recommender outputs
[feature.analyze.dependencies]
pandas = "~=2.1"
duckdb-cli = "~=1.0"
python-duckdb = "~=1.0"
pyarrow = ">=16"

# dependencies to run the recommender algorithms
[feature.run.dependencies]
pytorch = "~=2.1"
numpy = "~=2.0"
pandas = "~=2.0"
scipy = "~=1.10"
numba = "~=0.56"
ray-default = ">=2.40.0,<3"
# hpfrec = "~=0.2.13"
implicit = "~=0.7.0"

[feature.run.pypi-dependencies]
lenskit = { version = "~=2025.2", extras = ["implicit", "sklearn", "funksvd"] }

[feature.run.target.linux.dependencies]
libblas = { build = "*mkl*" }

# dependencies for running with CUDA
[feature.cuda]
platforms = ["linux-64"]
system-requirements = { cuda = "12" }

[feature.cuda.dependencies]
pytorch-gpu = ">=2"

# dependencies for dev work on the codex
[feature.dev.dependencies]
deno = "~=1.30"
line_profiler = "~=4.1"
ruff = "*"
pre-commit = "~=3.7"
ipython = ">=8"
jupyterlab = "*"
parquet-tools = ">=0.2.16,<0.3"

[environments]
default = { features = ["run", "analyze"], solve-group = "main" }
publish = { features = ["nomkl"] }
dev = { features = ["run", "analyze", "dev"], solve-group = "main" }
cuda = { features = ["run", "analyze", "cuda"], solve-group = "cuda" }
cuda-dev = { features = ["run", "analyze", "cuda", "dev"], solve-group = "cuda" }
